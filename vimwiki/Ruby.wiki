== Ruby ==
- [[#Array|Array]]
- [[#Files&Directories|Files and Directories]]
- [[#Goodies|Goodies]]
  - [[#Benchmark|Benchmark]]

<br/>

=== Core library ===

==== Array ====
{{{class="ruby"
# reject values
  ["", "1", "2"].reject(&:empty?)

# Select values
  [10, 2, 1].select { |value| value >= 1 }

# Check values against condition
  [132, 12, 0.5].any? { |value| value > 1 }

# Select a random value
  %w(one two three).sample

# Sort hashes
  [{ age: 12, name: "John" }, { age: 21, name: "Betty" }].sort_by { |value_hash| value_hash[:age] }
}}}

<br/>

=== Files&Directories ===
Directories
{{{class="ruby"
Dir.pwd                             # Current directory
Dir.chdir "take_me_home/directory/" # Change directory
Dir.glob("*")                       # Array of files' name in pwd
Dir.glob('dir_name/**/*.{avi,m4a}') # Every avi and m4a files, including in sub-directories
Dir["/target_directory/*"]          # Array of files' path + name
}}}


Files
{{{class="ruby"
File.basename("my_code.rb")
}}}

<br/>

==== Goodies ====

{{{class="ruby"
# Execute unix commands using backticks `. Returns a string
`wc -l line_count.csv`
}}}

<br/>

===== Benchmark =====
{{{class="ruby"
require "benchmark"

puts Benchmark.measure { "something".capitalize }

iterations = 1_000

Benchmark.bm(iterations) do |bm|
  bm.report "message here" do
    "something".capitalize
  end

  bm.report "another convoluted method" do
    "something"[0].upcase + "something"[1..-1]
  end
end
}}}

== Sequel ==
- [[#Postgres|Postgres]]
- [[#Links|Links]]

<br />

=== Links ===
- [[http://ricostacruz.com/cheatsheets/sequel.html|Sequel Cheatsheet]]
- [[https://github.com/jeremyevans/sequel|Github]]
- [[http://sequel.jeremyevans.net/documentation.html|Official documentation]]

<br />

{{{class="ruby"
# Filter dates
DB[:users].where { created_at > Date.today << 1 }   # 1 month
DB[:users].where { created_at > (Date.today - 10) } # 10 days
# > WHERE created_at (`created_at` > '2016-12-11')

DB[:users].where(created_at: ((Date.today - 10)..(Date.today)))
}}}

{{{class="ruby"
# Sequel.~ == NOT
# Sequel.& == AND
DB[:users].where { Sequel.~(login: nil, email: nil) }
# WHERE ((`login` IS NOT NULL) OR (`email` IS NOT NULL))

DB[:users].where { Sequel.&(login: nil, email: nil) }
DB[:users].exclude { Sequel.~(login: nil, email: nil) }
# WHERE ((`login` IS NULL) AND (`email` IS NULL))

DB[:users].exclude { Sequel.&(login: nil, email: nil) }
# WHERE NOT ((`login` IS NULL) AND (`email` IS NULL))

DB[:users].exclude { Sequel.&(Sequel.~(login: nil, email: nil)) }
# WHERE NOT ((`login` IS NOT NULL) OR (`email` IS NOT NULL))

DB[:users].where { Sequel.&(Sequel.~(login: nil), Sequel.~(email: nil)) }
# WHERE ((`login` IS NOT NULL) AND (`email` IS NOT NULL))
}}}


{{{class="ruby"
# REGEX
DB[:users].where(login: /Admin/i)
#  WHERE (`login` REGEXP 'Admin')
}}}

<br />

=== Postgres ===
[[https://github.com/jeremyevans/sequel/blob/master/spec/adapters/postgres_spec.rb|Postgres' specs]] (search "@db.create_table!(:items)")

[[http://sequel.jeremyevans.net/rdoc-plugins/files/lib/sequel/extensions/pg_json_ops_rb.html|pg_json_ops]]
{{{class="ruby"
DB.extension :pg_array, :pg_json, :pg_json_ops

DB.create_table :movies do
  column :genres, 'text[]'   # Create an Array column
  column :actors, 'jsonb'  # jsonb column
end

DB[:movies].insert(genres: Sequel.pg_array(["Comedy", "Documentary"], :text))
DB[:movies].insert(actors: Sequel.pg_jsonb({"leading" => "Chuck Norris"}))
}}}

{{{class="ruby"
# Store files in a PG database
DB.alter_table :paintings do
  add_column :painting, File
end

painting_image = File.open("guernica.png").read

DB[:paintings].insert(painting: Sequel.blob(painting_image))
}}}
